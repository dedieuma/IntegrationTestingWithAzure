{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "iotHubName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "Function App Linked to my IotHub and Cosmos"
      }
    },
    "hostingPlanName": {
      "type": "string"
    },
    "applicationInsightName": {
      "type": "string"
    },
    "cosmosApiType": {
      "type": "string",
      "allowedValues": [
        "Cassandra",
        "Gremlin",
        "MongoDB",
        "SQL",
        "Table"
      ],
      "defaultValue": "SQL"
    },
    "cosmosName": {
      "type": "string"
    },
    "accountStorageName": {
      "type": "string"
    }
  },
  "variables": {
    "iotHubResourceId": "[resourceId('Microsoft.Devices/Iothubs', parameters('iotHubName'))]",
    "iotHubKeyName": "iothubowner",
    "iotHubKeyResource": "[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', parameters('iotHubName'), variables('iotHubKeyName'))]",
    "faUniq": "[concat(parameters('functionAppName'), substring(uniquestring(resourceGroup().id),0,5))]",
    "hostingPlanUniq": "[concat(parameters('hostingPlanName'), substring(uniquestring(resourceGroup().id),0,5))]",
    "functionAppName": "[parameters('functionAppName')]",
    "hostingPlanName": "[parameters('hostingPlanName')]",
    "storageAccountName": "[parameters('accountStorageName')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "applicationInsightsName": "[parameters('applicationInsightName')]",
    "cosmosOfferType": "Standard",
    "cosmosResourceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosName'))]",
    "devices_provider_apiversion" :  "2016-02-03"
  },
  "resources": [
    {
      "apiVersion": "2016-02-03",
      "type": "Microsoft.Devices/IotHubs",
      "name": "[parameters('iotHubName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "location": "[parameters('location')]"
      }
    },
    //{
    //  "type": "Microsoft.Web/serverfarms",
    //  "apiVersion": "2015-04-01",
    //  "name": "[parameters('hostingPlanName')]",
    //  "location": "[parameters('location')]",
    //  "properties": {
    //    "name": "[variables('hostingPlanName')]",
    //    "computeMode": "Dynamic",
    //    "sku": "Standard"
    //  }
    //},
    //{
    //  "apiVersion": "2016-08-01",
    //  "type": "Microsoft.Web/sites",
    //  "name": "[variables('functionAppName')]",
    //  "location": "[parameters('location')]",
    //  "kind": "functionapp",
    //  "dependsOn": [
    //    "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
    //  ],
    //  "properties": {
    //    "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
    //    "siteConfig": {
    //      "appSettings": [
    //        {
    //          "name": "AzureWebJobsDashboard",
    //          "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
    //        },
    //        {
    //          "name": "AzureWebJobsStorage",
    //          "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
    //        },
    //        {
    //          "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
    //          "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
    //        },
    //        {
    //          "name": "WEBSITE_CONTENTSHARE",
    //          "value": "[toLower(variables('functionAppName'))]"
    //        },
    //        {
    //          "name": "FUNCTIONS_EXTENSION_VERSION",
    //          "value": "~1"
    //        },
    //        {
    //          "name": "WEBSITE_NODE_DEFAULT_VERSION",
    //          "value": "6.5.0"
    //        },
    //        {
    //          "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
    //          "value": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
    //        }
    //      ]
    //    }
    //  }
    //},
    //{
    //  "apiVersion": "2018-05-01-preview",
    //  "name": "[variables('applicationInsightsName')]",
    //  "type": "microsoft.insights/components",
    //  "location": "[parameters('location')]",
    //  "tags": {
    //    "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('applicationInsightsName'))]": "Resource"
    //  },
    //  "properties": {
    //    "ApplicationId": "[variables('applicationInsightsName')]",
    //    "Request_Source": "IbizaWebAppExtensionCreate"
    //  }
    //}

    //{
    //  "apiVersion": "2015-04-08",
    //  "type": "Microsoft.DocumentDB/databaseAccounts",
    //  "kind": "[if(equals(parameters('cosmosApiType'), 'MongoDB'), 'MongoDB', 'GlobalDocumentDB')]",
    //  "name": "[parameters('cosmosName')]",
    //  "location": "[parameters('location')]",
    //  "properties": {
    //    "name": "[parameters('cosmosName')]",
    //    "databaseAccountOfferType": "[variables('cosmosOfferType')]",
    //    "locations": [
    //      {
    //        "locationName": "[parameters('location')]",
    //        "failoverPriority": 0
    //      },
    //      {
    //        "locationName": "[parameters('location')]",
    //        "failoverPriority": 1
    //      }
    //    ]
    //  },
    //  "tags": {
    //    "defaultExperience": "[if(equals(parameters('cosmosApiType'), 'Cassandra'), 'Cassandra', if(equals(parameters('cosmosApiType'), 'Gremlin'), 'Graph', if(equals(parameters('cosmosApiType'), 'MongoDB'), 'MongoDB', if(equals(parameters('cosmosApiType'), 'SQL'), 'DocumentDB', if(equals(parameters('cosmosApiType'), 'Table'), 'Table', '')))))]"
    //  }
    //}

    {
      "apiVersion": "2015-04-08",
      "kind": "GlobalDocumentDB",
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "name": "[parameters('cosmosName')]",
      "location": "[parameters('location')]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "id": "[concat(parameters('cosmosName'), '-', parameters('location'))]",
            "failoverPriority": 0,
            "locationName": "West Europe"
          }
        ],
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "dependsOn": []
      },
      "tags": {
        "defaultExperience": "DocumentDB"
      }
    }


  ],
  "outputs": {
    "hubKeys": {
      "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listKeys(variables('iotHubKeyResource'), '2017-07-01').primaryKey)]",
      "type": "string"
    },
    "EventHubEndPoint": {
      "value": "[concat('Endpoint=',reference(resourceId('Microsoft.Devices/IoTHubs',parameters('iotHubName'))).eventHubEndpoints.events.endpoint, ';SharedAccessKeyName=iothubowner;SharedAccessKey=',listKeys(resourceId('Microsoft.Devices/IotHubs',parameters('iotHubName')),variables('devices_provider_apiversion')).value[0].primaryKey)]",
      "type": "string"
    }
    //"cosmosKeys": {
    //  "type": "string",
    //  "value": "[reference(variables('cosmosResourceId')).hostName]"
    //}

  }
}